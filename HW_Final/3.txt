sudo find /home/*/.ssh /root/.ssh -type f -name "*.pub" ! -perm 644 -print0 | xargs -0 -I {} sudo sh -c 'echo "{} $(stat -c %a {})"' >> ssh_permission_errors.log; \
sudo find /home/*/.ssh /root/.ssh -type f ! -name "*.pub" ! -perm 600 -print0 | xargs -0 -I {} sudo sh -c 'echo "{} $(stat -c %a {})"' >> ssh_permission_errors.log

Разберём команду по частям:
sudo find /home/*/.ssh /root/.ssh -type f -name "*.pub" ! -perm 644 -print0 ищет в директории /root/.ssh и всех директориях /home/.../.ssh файлы (-type f),
оканчивающиеся на ".pub" (-name "*.pub" -- публичные ключи) и с правами доступа, отличными от 644 (! -perm 644), затем выводит список названий таких файлов с учётом пути,
разделённых невидимыми пробелами (-print0). sudo требуется для работы внутри /root. xargs -0 -I {} sudo sh -c 'echo "{} $(stat -c %a {})"' затем перехватывает вывод,
парсит названия по невидимым пробелам (-0) и для каждого элемента выполняет echo "{} $(stat -c %a {})". Вместо {} (-I {}) выводится название файла с путём,
$(stat -c %a {}) подставляет в вывод права доступа к файлу в численном виде. Затем полученный вывод перенаправляется в файл ssh_permission_errors.log
Абсолютно аналогично работает следующая команда (после ;), только она ищет файлы, НЕ оканчивающиеся на ".pub" (приватные ключи) и с правами доступа, отличными от 600.
